package com.AFG.bean;

import java.util.ArrayList;
import java.util.List;

import javax.faces.application.FacesMessage;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.SessionScoped;
import javax.faces.context.FacesContext;

import com.AFG.persistance.Fournisseur;
import com.AFG.service.FournisseurService;
import com.AFG.service.OutillageService;

//Generated 26 avr. 2018 14:26:27 by Hibernate Tools 5.1.0.Alpha1

/**
* User generated by hbm2java
*/

@ManagedBean(name = "fournisseurBean")
@SessionScoped
public class FournisseurBean {
	
	private Fournisseur selectedFournisseur;
	private List<Fournisseur> fournisseurs;
	
	private int reference;
	private String nom;
	private String prenom;
	private String tel;
	private String adress;
	private String email;
	
	public Fournisseur getSelectedFournisseur() {
		return selectedFournisseur;
	}

	public void setSelectedFournisseur(Fournisseur selectedFournisseur) {
		this.selectedFournisseur = selectedFournisseur;
	}

	public int getReference() {
		return reference;
	}

	public void setReference(int reference) {
		this.reference = reference;
	}

	public String getNom() {
		return nom;
	}

	public void setNom(String nom) {
		this.nom = nom;
	}

	public String getPrenom() {
		return prenom;
	}

	public void setPrenom(String prenom) {
		this.prenom = prenom;
	}

	public String getTel() {
		return tel;
	}

	public void setTel(String tel) {
		this.tel = tel;
	}

	public String getAdress() {
		return adress;
	}

	public void setAdress(String adress) {
		this.adress = adress;
	}

	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	public List<Fournisseur> getFournisseurs(){
		FournisseurService ser = new FournisseurService();
		fournisseurs = ser.rechercheTousFournisseur();
		return fournisseurs;
	}
	
	public void setFournisseurs(List<Fournisseur> fournisseurs){
		this.fournisseurs = fournisseurs;
	}
	
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	
	public List<Fournisseur> autoC(String query){
		FournisseurService ser = new FournisseurService();
		List<Fournisseur> listeF = ser.RechercheParNom(query);
		return listeF;
	}
	
	public void add(){
		select(new Fournisseur());
	}
	
	public void select(Fournisseur p){
		selectedFournisseur = p;
		this.reference = p.getReference();
		this.nom = p.getNom();
		this.prenom = p.getPrenom();
		this.adress = p.getAdress();
		this.tel = p.getTel();
		this.email = p.getEmail();
	}
	
	public String ajouter(){
		selectedFournisseur = new Fournisseur();
		selectedFournisseur.setNom(nom);
		selectedFournisseur.setPrenom(prenom);
		selectedFournisseur.setAdress(adress);
		selectedFournisseur.setTel(tel);
		selectedFournisseur.setEmail(email);
		FacesContext faces = FacesContext.getCurrentInstance();
		FournisseurService ser = new FournisseurService();
		if (selectedFournisseur.getNom().isEmpty() || selectedFournisseur.getNom() == null){
			faces.addMessage(null, new FacesMessage(FacesMessage.SEVERITY_FATAL, "Erreur de saisie.", "Veuillez saisir le nom du fournisseur !"));
			return null;
		}
		if (selectedFournisseur.getPrenom().isEmpty() || selectedFournisseur.getPrenom() == null){
			faces.addMessage(null, new FacesMessage(FacesMessage.SEVERITY_FATAL, "Erreur de saisie.", "Veuillez saisir le prénom du fournisseur !"));
			return null;
		}
		Fournisseur p = ser.RechercheParNomPrenom(selectedFournisseur.getNom(), selectedFournisseur.getPrenom());
		if (p!=null){
			faces.addMessage(null, new FacesMessage(FacesMessage.SEVERITY_FATAL, "Fournisseur Existant.", "Veuillez saisir des autres informations !"));
			return null;
		}
		if(tel!=null)
			if (tel.length()!=8 && tel.length()!=0){
	    		faces.addMessage(null, new FacesMessage(FacesMessage.SEVERITY_WARN, "Erreur de saisie.", "Veuillez saisir un nombre de téléphone correct!"));
	    		return null;
	    	}
		ser.ajouterFournisseur(selectedFournisseur);
		faces.addMessage(null, new FacesMessage(FacesMessage.SEVERITY_INFO, "Fournisseur Ajouté.", "Le fournisseur a été ajouté avec succée !"));
		add();
		return "ADDED";
	}
	
	public String editer(){
		FacesContext faces = FacesContext.getCurrentInstance() ;
		FournisseurService ser = new FournisseurService();
		if (selectedFournisseur.getNom().isEmpty() || selectedFournisseur.getNom() == null){
			faces.addMessage(null, new FacesMessage(FacesMessage.SEVERITY_FATAL, "Erreur de saisie.", "Veuillez saisir le nom du fournisseur !"));
			return null;
		}
		if (selectedFournisseur.getPrenom().isEmpty() || selectedFournisseur.getPrenom() == null){
			faces.addMessage(null, new FacesMessage(FacesMessage.SEVERITY_FATAL, "Erreur de saisie.", "Veuillez saisir le prénom du fournisseur !"));
			return null;
		}
		Fournisseur p = ser.RechercheParNomPrenom(selectedFournisseur.getNom(), selectedFournisseur.getPrenom());
		if (p!=null && p.getReference()!=selectedFournisseur.getReference()){
			faces.addMessage(null, new FacesMessage(FacesMessage.SEVERITY_FATAL, "Fournisseur Existant.", "Veuillez saisir des autres informations !"));
			return null;
		}
		if (selectedFournisseur.getTel().length()!=8 && selectedFournisseur.getTel().length()!=0){
    		faces.addMessage(null, new FacesMessage(FacesMessage.SEVERITY_WARN, "Erreur de saisie.", "Veuillez saisir un nombre de téléphone correct!"));
    		return null;
    	}
		if(p==null) p=new Fournisseur();
		if (p.equals(selectedFournisseur)){
			//faces.addMessage(null, new FacesMessage(FacesMessage.SEVERITY_WARN, "Attention.", "Verifier votre donnée, rien à modifier !"));
			return null;
		}
		ser.modifierFournisseur(selectedFournisseur);
		faces.addMessage(null, new FacesMessage(FacesMessage.SEVERITY_INFO, "Fournisseur Modifié.", "Le fournisseur \""+selectedFournisseur.getReference()+"\"a été modifié avec succée !"));
		add();
		return "EDITED";
}
	
	public void supprimer(){
		FacesContext faces = FacesContext.getCurrentInstance() ;
		FournisseurService ser = new FournisseurService();
		OutillageService ser2 = new OutillageService();
		if(ser2.rechercheOutillageParFournisseur(selectedFournisseur).size()>0)
			faces.addMessage(null, new FacesMessage(FacesMessage.SEVERITY_WARN, "Suppression Impossible.", "Le fournisseur \""+selectedFournisseur.getReference()+"\" est affecté dans une ou plusieurs outillages"));
		else{
			ser.suprimerFournisseur(selectedFournisseur);
			faces.addMessage(null, new FacesMessage(FacesMessage.SEVERITY_INFO, "Succée de suppression.", "Le fournisseur \""+selectedFournisseur.getReference()+"\" à été supprimé avec succée"));
		}
		selectedFournisseur = null;
	}
	
	public List<String> allNames(){
		List<String> liste = new ArrayList<String>();
		for(int i=0;i<fournisseurs.size();i++)
			liste.add(fournisseurs.get(i).getNom()+" "+fournisseurs.get(i).getPrenom());
		return liste;
	}
}