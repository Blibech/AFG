package com.AFG.bean;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.annotation.PostConstruct;
import javax.faces.application.FacesMessage;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.SessionScoped;
import javax.faces.context.FacesContext;

import com.AFG.persistance.Affectation;
import com.AFG.persistance.Demande;
import com.AFG.persistance.Fournisseur;
import com.AFG.persistance.Outillage;
import com.AFG.service.OutillageService;

//Generated 26 avr. 2018 14:26:27 by Hibernate Tools 5.1.0.Alpha1

/**
* User generated by hbm2java
*/

@ManagedBean(name = "outillageBean")
@SessionScoped
public class OutillageBean {
	
	@PostConstruct
	public void init(){
		table = false;
	}
	
	public String agileStyle(int agile){
		if (agile==1) return "Oui";
		return "Non";
	}
	
	private boolean table;
	
	public boolean isTable() {
		return table;
	}

	public void setTable(boolean table) {
		this.table = table;
	}

	private List<Outillage> outillages;
	private Outillage selectedOutillage;
	private List<Outillage> editList;
	
	private Integer reference;
	private Fournisseur fournisseur;
	private String code;
	private String description;
	private String client;
	private Date dateVal;
	private Integer agile;
	private int frequence;
	private String empl;
	private List<Affectation>affectations ;
	private List<Demande>demandes;
	private Integer nb;
	
	@PostConstruct
	public void inti(){
		selectedOutillage = new Outillage();
		selectedOutillage.setFournisseur(new Fournisseur());
	}
	
	public List<Outillage> getEditList() {
		return editList;
	}

	public void setEditList(List<Outillage> editList) {
		this.editList = editList;
	}

	public Outillage getSelectedOutillage() {
		return selectedOutillage;
	}

	public void setSelectedOutillage(Outillage selectedOutillage) {
		this.selectedOutillage = selectedOutillage;
	}

	public void setOutillages(List<Outillage> outillages) {
		this.outillages = outillages;
	}

	public Integer getReference() {
		return this.reference;
	}

	public void setReference(Integer reference) {
		this.reference = reference;
	}

	public Fournisseur getFournisseur() {
		return this.fournisseur;
	}

	public void setFournisseur(Fournisseur fournisseur) {
		this.fournisseur = fournisseur;
	}

	public String getCode() {
		return this.code;
	}

	public void setCode(String code) {
		this.code = code;
	}

	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	public String getClient() {
		return this.client;
	}

	public void setClient(String client) {
		this.client = client;
	}

	public Integer getNb() {
		return this.nb;
	}

	public void setNb(Integer nb) {
		this.nb = nb;
	}

	public Date getDateVal() {
		return this.dateVal;
	}

	public void setDateVal(Date dateVal) {
		this.dateVal = dateVal;
	}

	public Integer getAgile() {
		return this.agile;
	}

	public void setAgile(Integer agile) {
		this.agile = agile;
	}

	public int getFrequence() {
		return this.frequence;
	}

	public void setFrequence(int frequence) {
		this.frequence = frequence;
	}

	public String getEmpl() {
		return this.empl;
	}

	public void setEmpl(String empl) {
		this.empl = empl;
	}

	public List<Affectation> getAffectations() {
		return this.affectations;
	}

	public void setAffectations(List<Affectation> affectations) {
		this.affectations = affectations;
	}

	public List<Demande> getDemandes() {
		return this.demandes;
	}

	public void setDemandes(List<Demande> demandes) {
		this.demandes = demandes;
	}
	
	public void setOutillage(List<Outillage> outillages){
		this.outillages = outillages;
	}
	
	public List<Outillage> getOutillages(){
		OutillageService ser = new OutillageService();
		outillages = ser.rechercheTousOutillageLasy();
		return outillages;
	}
	
	public void annuler(){
		selectedOutillage = new Outillage();
		reference = 0;
		fournisseur = null;
		code = "";
		description = "";
		client = "";
		dateVal = null;
		agile = 0;
		frequence = 0;
		empl = "";
		affectations = new ArrayList<Affectation>();
		demandes = new ArrayList<Demande>();
		nb = 0;
	}
	
	public int nombreRequrence(String code){
		int nbr = 0;
		OutillageService ser = new OutillageService();
		List<Outillage> list = ser.rechercheTousOutillage();
		code = code.substring(0, 11);
		for(int i=0;i<list.size();i++){
			if(list.get(i).getCode().substring(0, 11).equals(code)){
				nbr++;
			}
		}
		return nbr;
	}
	
	public String supprimer(){
		FacesContext faces = FacesContext.getCurrentInstance() ;
		OutillageService ser = new OutillageService();
		ser.suprimerOutillage(selectedOutillage);
		faces.addMessage(null, new FacesMessage(FacesMessage.SEVERITY_INFO, "Succée de suppression.", "L'outillage \""+selectedOutillage.getCode()+"\" à été supprimé avec succée"));
		select(selectedOutillage);
		return null;
	}
	
	public void select(Outillage outillage){
		selectedOutillage = outillage;
		OutillageService ser = new OutillageService();
		editList = ser.rechercheTousOutillageParCode(outillage.getCode());
	}
	
	public String edit(){
		FacesContext faces = FacesContext.getCurrentInstance() ;
		OutillageService ser = new OutillageService();
		if(selectedOutillage.getFournisseur()==null){
			faces.addMessage(null, new FacesMessage(FacesMessage.SEVERITY_FATAL, "Erreur de saisie.", "Veuillez séléctionnez un fournisseur !"));
			return null;
		}
		for(int i=0;i<editList.size();i++){
			editList.get(i).setDescription(selectedOutillage.getDescription());
			editList.get(i).setClient(selectedOutillage.getClient());
			editList.get(i).setDateVal(selectedOutillage.getDateVal());
			editList.get(i).setFournisseur(selectedOutillage.getFournisseur());
			editList.get(i).setFrequence(selectedOutillage.getFrequence());
			editList.get(i).setAgile(selectedOutillage.getAgile());
			ser.modifierOutillage(editList.get(i));
		}
		faces.addMessage(null, new FacesMessage(FacesMessage.SEVERITY_INFO, "Outillage Modifié.", "L'outillage \""+selectedOutillage.getCode().substring(0, 11)+"\"a été modifié avec succés !"));

		return null;
	}
	
	public void add(){
		selectedOutillage.setEmpl("");
	}
	
	public String ajouter(){
		FacesContext faces = FacesContext.getCurrentInstance() ;
		OutillageService ser = new OutillageService();
		Outillage objet = selectedOutillage;
		objet.setReference(null);
		objet.setNb(editList.size()+1);
		objet.setCode(selectedOutillage.getCode().substring(0, 11)+"-"+objet.getNb());
		ser.ajouterOutillage(objet);
		faces.addMessage(null, new FacesMessage(FacesMessage.SEVERITY_INFO, "Outillage ajouté.", "Outillage ajouter avec succés !"));
		select(selectedOutillage);
		selectedOutillage.setEmpl("");
		return null;
	}
	
	public String editerEout(){
		FacesContext faces = FacesContext.getCurrentInstance() ;
		OutillageService ser = new OutillageService();
		ser.modifierOutillage(selectedOutillage);
		faces.addMessage(null, new FacesMessage(FacesMessage.SEVERITY_INFO, "Outillage modifié.", "Outillage modifié avec succés !"));
		select(selectedOutillage);
		return null;
	}
	
	public String saveNewOutillage(){
		FacesContext faces = FacesContext.getCurrentInstance() ;
		OutillageService ser = new OutillageService();
		if(code.isEmpty() || code == null || code.length()!=11){
			faces.addMessage(null, new FacesMessage(FacesMessage.SEVERITY_ERROR, "Erreur de saisie.", "Veuillez verifier le code !"));
			return null;
		}
		if(ser.rechercheTousOutillageParCode(code).size()>0){
			faces.addMessage(null, new FacesMessage(FacesMessage.SEVERITY_WARN, "Code existant.", "Veuillez verifier le code !"));
			return null;
		}
		if(fournisseur == null){
			faces.addMessage(null, new FacesMessage(FacesMessage.SEVERITY_ERROR, "Erreur de saisie.", "Veuillez verifier le fournisseur !"));
			return null;
		}
		table = true;
		editList = ser.rechercheTousOutillageParCode(code);
		selectedOutillage = new Outillage();
		selectedOutillage.setCode(code);
		selectedOutillage.setDescription(description);
		selectedOutillage.setClient(client);
		selectedOutillage.setFournisseur(fournisseur);
		selectedOutillage.setDateVal(dateVal);
		selectedOutillage.setAgile(agile);
		selectedOutillage.setFrequence(frequence);
		
		return null;
	}
	
	public void newOutillage(){
		annuler();
		table = false;
	}

}