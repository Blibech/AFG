package com.AFG.bean;

import java.util.List;

import javax.faces.application.FacesMessage;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.SessionScoped;
import javax.faces.context.FacesContext;

import com.AFG.persistance.Produit;
import com.AFG.service.ProduitService;

//Generated 26 avr. 2018 14:26:27 by Hibernate Tools 5.1.0.Alpha1

/**
* User generated by hbm2java
*/

@ManagedBean(name = "produitBean")
@SessionScoped
public class ProduitBean {
	
	private Produit selectedProduit;
	private List<Produit> produits;
	
	private int reference;
	private String affectation;
	private String designation;
	private String client;
	private String emplacement;
	
	public Produit getSelectedProduit() {
		return selectedProduit;
	}

	public void setSelectedProduit(Produit selectedProduit) {
		this.selectedProduit = selectedProduit;
	}

	public int getReference() {
		return reference;
	}

	public void setReference(int reference) {
		this.reference = reference;
	}

	public String getAffectation() {
		return affectation;
	}

	public void setAffectation(String affectation) {
		this.affectation = affectation;
	}

	public String getDesignation() {
		return designation;
	}

	public void setDesignation(String designation) {
		this.designation = designation;
	}

	public String getClient() {
		return client;
	}

	public void setClient(String client) {
		this.client = client;
	}

	public String getEmplacement() {
		return emplacement;
	}

	public void setEmplacement(String emplacement) {
		this.emplacement = emplacement;
	}

	public List<Produit> getProduits() {
		ProduitService ser = new ProduitService();
		produits = ser.rechercheParTout(affectation, designation, client, emplacement);
		return produits;
	}

	public void setProduits(List<Produit> produits) {
		this.produits = produits;
	}
	
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	
	public void annuler(){
		reference = 0;
		affectation = null;
		designation = null;
		client = null;
		emplacement = null;
	}
	
	public void add(){
		select(new Produit());
	}
	
	public void select(Produit p){
		selectedProduit = p;
		this.reference = p.getReference();
		this.affectation = p.getAffectation();
		this.designation = p.getDesignation();
		this.client = p.getClient();
		this.emplacement = p.getEmplacement();
	}
	
	public String ajouter(){
		selectedProduit.setAffectation(affectation);
		selectedProduit.setDesignation(designation);
		selectedProduit.setClient(client);
		selectedProduit.setEmplacement(emplacement);
		FacesContext faces = FacesContext.getCurrentInstance();
		ProduitService ser = new ProduitService();
		if (selectedProduit.getAffectation().isEmpty() || selectedProduit.getAffectation() == null){
			faces.addMessage(null, new FacesMessage(FacesMessage.SEVERITY_FATAL, "Erreur de saisie.", "Veuillez saisir l'affectation !"));
			return null;
		}
		if (selectedProduit.getEmplacement().isEmpty() || selectedProduit.getEmplacement() == null){
			faces.addMessage(null, new FacesMessage(FacesMessage.SEVERITY_FATAL, "Erreur de saisie.", "Veuillez saisir l'emplacement !"));
			return null;
		}
		Produit p = ser.RechercheParAffectation(selectedProduit.getAffectation());
		if (p!=null){
			faces.addMessage(null, new FacesMessage(FacesMessage.SEVERITY_FATAL, "Produit Existant.", "Veuillez saisir une autre affectation !"));
			return null;
		}
		ser.ajouterProduit(selectedProduit);
		faces.addMessage(null, new FacesMessage(FacesMessage.SEVERITY_INFO, "Produit Ajouté.", "Le produit a été ajouté avec succée !"));
		annuler();
		return "ADDED";
	}
	
	public String editer(){
		FacesContext faces = FacesContext.getCurrentInstance();
		ProduitService ser = new ProduitService();
		if (selectedProduit.getAffectation().isEmpty() || selectedProduit.getAffectation() == null){
			faces.addMessage(null, new FacesMessage(FacesMessage.SEVERITY_FATAL, "Erreur de saisie.", "Veuillez saisir l'affectation !"));
			return null;
		}
		if (selectedProduit.getEmplacement().isEmpty() || selectedProduit.getEmplacement() == null){
			faces.addMessage(null, new FacesMessage(FacesMessage.SEVERITY_FATAL, "Erreur de saisie.", "Veuillez saisir l'emplacement !"));
			return null;
		}
		Produit p = ser.RechercheParAffectation(selectedProduit.getAffectation());
		if (p!=null && p.getReference()!=selectedProduit.getReference()){
			faces.addMessage(null, new FacesMessage(FacesMessage.SEVERITY_FATAL, "Produit Existant.", "Veuillez saisir une autre affectation !"));
			return null;
		}
		if(p==null) p=new Produit();
		if (p.equals(selectedProduit)){
			//faces.addMessage(null, new FacesMessage(FacesMessage.SEVERITY_WARN, "Rien à modifier.", "Attention rien à modifier !"));
			return null;
		}
		ser.modifierProduit(selectedProduit);
		faces.addMessage(null, new FacesMessage(FacesMessage.SEVERITY_INFO, "Produit Modifié.", "Le produit \""+selectedProduit.getReference()+"\"a été modifié avec succée !"));
		annuler();
		return "EDITED";
	}
	
	public void supprimer(){
		FacesContext faces = FacesContext.getCurrentInstance() ;
		ProduitService ser = new ProduitService();
		ser.suprimerProduit(selectedProduit);
		faces.addMessage(null, new FacesMessage(FacesMessage.SEVERITY_INFO, "Succée de suppression.", "Le produit \""+selectedProduit.getReference()+"\" à été supprimé avec succée"));
		selectedProduit = null;
		annuler();
	}

}