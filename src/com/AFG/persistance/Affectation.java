package com.AFG.persistance;
// Generated 26 mai 2018 08:54:43 by Hibernate Tools 5.1.0.Alpha1

/**
 * Affectation generated by hbm2java
 */
public class Affectation implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	
	private Integer reference;
	private Outillage outillage;
	private Produit produit;

	public Affectation() {
	}

	public Affectation(Outillage outillage, Produit produit) {
		this.outillage = outillage;
		this.produit = produit;
	}

	public Integer getReference() {
		return this.reference;
	}

	public void setReference(Integer reference) {
		this.reference = reference;
	}

	public Outillage getOutillage() {
		return this.outillage;
	}

	public void setOutillage(Outillage outillage) {
		this.outillage = outillage;
	}

	public Produit getProduit() {
		return this.produit;
	}

	public void setProduit(Produit produit) {
		this.produit = produit;
	}

	@Override
	public String toString() {
		return "Affectation [reference=" + reference + ", outillage=" + outillage + ", produit=" + produit + "]";
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((outillage == null) ? 0 : outillage.hashCode());
		result = prime * result + ((produit == null) ? 0 : produit.hashCode());
		result = prime * result + ((reference == null) ? 0 : reference.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Affectation other = (Affectation) obj;
		if (outillage == null) {
			if (other.outillage != null)
				return false;
		} else if (!outillage.equals(other.outillage))
			return false;
		if (produit == null) {
			if (other.produit != null)
				return false;
		} else if (!produit.equals(other.produit))
			return false;
		if (reference == null) {
			if (other.reference != null)
				return false;
		} else if (!reference.equals(other.reference))
			return false;
		return true;
	}
	
	

}
